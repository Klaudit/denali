#!/usr/bin/env node
require('source-map-support').install();
require('babel-register')({
  ignore(filename) {
    return filename.match(/node_modules/) || filename.match(/denali\/dist/);
  }
});

process.title = 'denali';

var semver = require('semver');
var chalk = require('chalk');

var version = process.version;

if (!semver.satisfies(process.version, '>=6')) {
  console.error(chalk.red('`denali` requires node version >= 6, you used ' + version));
  return process.exit(1);
}

var path = require('path');
var resolve = require('resolve');
var findup = require('findup-sync');

var pkgPath = findup('package.json');

// No package.json found, revert to global install
if (!pkgPath) {
  var pkg = require('../package.json');
  console.log('denali ' + pkg.version + ' [global]');
  require('../commands/index').default();

// Package.json found
} else {
  var pkg = require(pkgPath);
  var pkgDir = path.dirname(path.resolve(pkgPath));
  var localDenali;
  try {
    localDenali = resolve.sync('denali', { basedir: pkgDir });
  } catch (e) {}
  // If a local copy of denali exists, use that, unless we are actually running
  // this in the denali repo itself
  if (localDenali && pkg.name !== 'denali') {
    var localDenaliPkgDir = path.dirname(findup('package.json', { cwd: localDenali }));
    var pkg = require(path.join(localDenaliPkgDir, 'package.json'));
    console.log('denali ' + pkg.version + ' [local]');
    require(path.join(localDenaliPkgDir, 'commands', 'index')).default(localDenaliPkgDir);
  } else {
    var pkg = require('../package.json');
    console.log('denali ' + pkg.version + ' [global]');
    require('../commands/index').default();
  }
}
